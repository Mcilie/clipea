#!/usr/bin/env php
<?php
// Clipea

require_once __DIR__ . '/lib/cli.php';
require_once __DIR__ . '/lib/llm.php';

if (!shell_exec('which llm')) {
    die("Error: dependency 'llm' not found. Run 'clipea setup' to install\n");
}

$env = [
    'shell' => trim(shell_exec('ps -o comm= -p $(ps -o ppid= -p $(ps -o ppid= -p $$))')),
    'os' => PHP_OS,
    // 'cwd' => getcwd(),
    'editor' => getenv('EDITOR') ?? 'nano'
];

$system = file_get_contents(__DIR__ . '/system-prompt.txt') . json_encode($env);


function get_input(array $argv) {
    $argv = array_slice($argv, 1);
    $prompt = implode(' ', $argv);

    $stdin = get_stdin();
    if ($stdin) {
        if (strlen($stdin) > 8192) {
            die("Error: Input too long! Maximum 8192 characters allowed. Try limiting your input using 'head -c 8000 file.txt'.");
        }
        $prompt .= "\n~~~DATA~~~\n" . $stdin;
    }

    return $prompt;
}

$prompt = get_input($argv);



switch($prompt) {
    case 'alias':
        switch($env['shell']) {
            case '-zsh':
                $cmd = "alias '??'='source " . __DIR__ . "/clipea.zsh'";
                break;
            default:
                $cmd = "alias '??'='source " . __DIR__ . "/clipea'";
        }        
        $prompt = "Append this line to my " . $env['shell'] . " startup file, watching out for quotes and escaping, then explain how to manually source it: " . $cmd;
        break;
    case 'help':
    case '--help':
    case '-h':
        echo file_get_contents(__DIR__ . '/usage.txt');
        exit;
    case '':
        echo "Error: no query specified";
        exit;
    case 'env':
        echo json_encode($env);
        exit;
    case 'setup':
        passthru('brew install llm');
        echo "Get an OpenAI API key from: https://platform.openai.com/account/api-keys\n";
        passthru('llm keys set openai');
        exit;
}

// GPT-4 mode
$llmOpts = '';
if (substr($prompt, 0, 2) === '4 ') {
    $llmOpts = ' -m 4 ';
    $prompt = substr($prompt, 2);
}

echo "ðŸ“ŽðŸŸ¢ ";

$line = '';
foreach (get_llm_response($system, $prompt, $llmOpts) as $char) {
    echo $char;
    $line .= $char;

    if ($char !== PHP_EOL) {
        continue;
    }

    if (substr($line, 0, 2) === '$ ') {
        maybe_passthru(substr($line, 2, -1)); // remove "$ " and \n
    }

    $line = '';
}
